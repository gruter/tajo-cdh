/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

//TajoClient -> TajoMaster Protocol
option java_package = "org.apache.tajo.ipc";
option java_outer_classname = "TajoMasterClientProtocol";
option java_generic_services = true;
option java_generate_equals_and_hash = true;

import "tajo_protos.proto";
import "TajoIdProtos.proto";
import "CatalogProtos.proto";
import "PrimitiveProtos.proto";
import "ClientProtos.proto";

service TajoMasterClientProtocolService {
  rpc updateSessionVariables(UpdateSessionVariableRequest) returns (BoolProto);
  rpc submitQuery(QueryRequest) returns (GetQueryStatusResponse);
  rpc updateQuery(QueryRequest) returns (UpdateQueryResponse);
  rpc explainQuery(ExplainQueryRequest) returns (ExplainQueryResponse);
  rpc getQueryResult(GetQueryResultRequest) returns (GetQueryResultResponse);
  rpc getRunningQueryList(GetQueryListRequest) returns (GetQueryListResponse);
  rpc getFinishedQueryList(GetQueryListRequest) returns (GetQueryListResponse);
  rpc getQueryStatus(GetQueryStatusRequest) returns (GetQueryStatusResponse);
  rpc killQuery(QueryIdProto) returns (BoolProto);
  rpc getClusterInfo(GetClusterInfoRequest) returns (GetClusterInfoResponse);
  rpc existTable(StringProto) returns (BoolProto);
  rpc getTableList(GetTableListRequest) returns (GetTableListResponse);
  rpc getTableDesc(GetTableDescRequest) returns (TableResponse);
  rpc createExternalTable(CreateTableRequest) returns (TableResponse);
  rpc dropTable(DropTableRequest) returns (BoolProto);
  rpc getFunctionList(StringProto) returns (FunctionResponse);

  // TODO - to be implemented
  //
  // authenticate
  //
  // getSessionVariableList
  // detachTable
  // createIndex
  // dropIndex
  // registerUDF
  // dropUDF
  // getUDFDesc
  // registerJars
  // getListRegisteredJars
}
